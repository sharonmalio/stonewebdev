
  <script src="scripts/jquery/dist/jquery.min.js"></script>
    <input style =  "font-family: Serif" id="pac-input" class="controls" type="text" placeholder="Search Nearby Hospitals">
    <div id="mapid" class="mt-0"></div>
    <script>
      // This example adds a search box to a map, using the Google Place Autocomplete
      // feature. People can enter geographical searches. The search box will return a
      // pick list containing a mix of places and predicted search terms.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      function initAutocomplete() {
        var map = new google.maps.Map(document.getElementById('mapid'), {
          center: {lat: -1.2921, lng: 36.8219},
          zoom: 13,
          mapTypeId: 'roadmap'
        });

        // Create the search box and link it to the UI element.
        var input = document.getElementById('pac-input');
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_RIGHT].push(input);

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function() {
          searchBox.setBounds(map.getBounds());
        });

        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function() {
          var places = searchBox.getPlaces();

          if (places.length == 0) {
            return;
          }

          // Clear out the old markers.
          markers.forEach(function(marker) {
            marker.setMap(null);
          });
          markers = [];

          // For each place, get the icon, name and location.
          var bounds = new google.maps.LatLngBounds();
          places.forEach(function(place) {
            if (!place.geometry) {
              console.log("Returned place contains no geometry");
              return;
            }
            var icon = {
              url: place.icon,
              size: new google.maps.Size(71, 71),
              origin: new google.maps.Point(0, 0),
              anchor: new google.maps.Point(17, 34),
              scaledSize: new google.maps.Size(25, 25)
            };

            // Create a marker for each place.
            markers.push(new google.maps.Marker({
              map: map,
              icon: icon,
              title: place.name,
              position: place.geometry.location
            }));

            if (place.geometry.viewport) {
              // Only geocodes have viewport.
              bounds.union(place.geometry.viewport);
            } else {
              bounds.extend(place.geometry.location);
            }
          });
          map.fitBounds(bounds);
        });
      //trying facility search here
      var address = document.getElementById('input').value;
      var geocoder = new google.maps.Geocoder();
  geocoder.geocode({
    'address': address
  }, function(results, status) {
    if (status == google.maps.GeocoderStatus.OK) {
      pos = {
      lat: results[0].geometry.location.lat(),
      lng: results[0].geometry.location.lng()
    };

      $.getJSON("http://localhost/ubuntuHealth/nearby.php?lat="+pos.lat+"&lng="+pos.lng, function(data) {
        
        for(var i in data){

          var obj = data[i];
          
          if(obj){
            if(obj.latitude && obj.longitude){
              var latx = obj.latitude;
              var latlen = parseInt(latx.length);
              var lngx = obj.longitude;
              var lnglen = parseInt(lngx.length);
              var mtitle =obj.facility_n; 
              var county = obj.county;
              var type = obj.type_;
              var owner = obj.owner;
              var link = "<a href='http://localhost/ubuntuHealth/book.php'>Book Appointment</a>"
              

              var marker = new google.maps.Marker({
                position: new google.maps.LatLng(latx, lngx),
                map: map,
                title: mtitle,
                //content:contentString,
                icon: "http://ajali.afyaresearch.org/images/hospital.png"
                });

                //add event listener
                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
                infoWindow.setContent('Name: ' +  data[i].facility_n +'<br>' + 'County: ' + data[i].county + '<br>' + 'Type: ' + data[i].type_ + '<br>' + 'Owner: ' + data[i].owner + '<br>' + 'Link: ' + link );
                  infoWindow.open(map, marker);
                }
                })(marker, i));
               
                }//

                }
              }
          });
      
    } else {
      alert("Something got wrong " + status);
    }
  });
      //trial facility search ends here 
      }
      
    //for the nav bar
      function openNav() {
      	    document.getElementById("mySidenav").style.width = "200px";
      	}
      	/* Set the width of the side navigation to 0 */
      function closeNav() {
      	    document.getElementById("mySidenav").style.width = "0";
      	}
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCHj5_T9nC7gQrQbdHyY1MAbck6lxLuJDk&libraries=places&callback=initAutocomplete"
         async defer></script>


